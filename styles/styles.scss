@import url("https://fonts.googleapis.com/css2?family=JetBrains+Mono&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  scroll-behavior: smooth;
}

body {
  font-family: "JetBrains Mono", monospace;
}

/*
  My hot take on the "Next.js vertical image on horizontal screen" problem.
    Apply .vertical-image-div to a div wrapped outside
    <Image className="vertical-image" layout="fill"> tag.
 */
.vertical-image-div > div {
  position: unset !important;
}

/* This is hard-coded, which is *probably* not good(?) */
@screen md {
  .vertical-image-div > div {
    position: absolute !important;
  }
}

.vertical-image {
  object-fit: contain;
  width: 100% !important;
  position: relative !important;
  height: unset !important;
}

// Anchor scroll offset
:target {
  scroll-margin-top: 5rem;
}

// Styling ToC's generated elements
.toc {
  ul ul {
    padding-left: 2ch;
  }

  li {
    &::before {
      content: "[x] ";
      @apply text-indigo-600/50 dark:text-indigo-600/50 font-bold;
    }

    a {
      @apply opacity-50 hover:opacity-100 transition-opacity;
    }
  }

  .tocActive {
    &::before {
      content: "[o] ";
      @apply text-green-600 dark:text-green-600 font-bold;
    }

    > a {
      @apply opacity-100;
    }
  }

  .tocNearMiss {
    &::before {
      content: "[x] ";
      @apply text-indigo-600/75 dark:text-indigo-600/75 font-bold;
    }

    > a {
      @apply opacity-75;
    }
  }
}

.heading {
  &::before {
    content: "# ";
    @apply text-indigo-600;
  }
}

.form {
  @apply flex flex-col gap-3;

  .field > label {
    @apply block text-white;
  }

  .field > input {
    @apply w-full text-black;
  }

  .field > textarea {
    @apply w-full text-black;
  }
}

#dialog-root {
  position: relative;
  z-index: 999;
}

.dialog {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  display: flex;
  justify-content: center;
  align-items: center;

  background: rgba(0, 0, 0, 0.3);
}

.posts-table {
  @apply w-full;

  th {
    @apply text-left px-2;
  }

  tr {
    @apply cursor-pointer;
  }
}